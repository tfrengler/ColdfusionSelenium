<cfcomponent output="false" modifier="final" accessors="false" persistent="true" >
<cfscript>
    static
    {
        CommandList = {
            NewSession: "NewSession",
            DeleteSession: "DeleteSession",
            Status: "Status",
            GetTimeouts: "GetTimeouts",
            SetTimeouts: "SetTimeouts",
            NavigateTo: "NavigateTo",
            GetCurrentURL: "GetCurrentURL",
            Back: "Back",
            Forward: "Forward",
            Refresh: "Refresh",
            GetTitle: "GetTitle",
            GetWindowHandle: "GetWindowHandle",
            CloseWindow: "CloseWindow",
            SwitchToWindow: "SwitchToWindow",
            GetWindowHandles: "GetWindowHandles",
            NewWindow: "NewWindow",
            SwitchToFrame: "SwitchToFrame",
            SwitchToParentFrame: "SwitchToParentFrame",
            GetWindowRect: "GetWindowRect",
            SetWindowRect: "SetWindowRect",
            MaximizeWindow: "MaximizeWindow",
            MinimizeWindow: "MinimizeWindow",
            FullscreenWindow: "FullscreenWindow",
            GetActiveElement: "GetActiveElement",
            GetElementShadowRoot: "GetElementShadowRoot",
            FindElement: "FindElement",
            FindElements: "FindElements",
            FindElementFromElement: "FindElementFromElement",
            FindElementsFromElement: "FindElementsFromElement",
            FindElementFromShadowRoot: "FindElementFromShadowRoot",
            FindElementsFromShadowRoot: "FindElementsFromShadowRoot",
            IsElementSelected: "IsElementSelected",
            GetElementAttribute: "GetElementAttribute",
            GetElementProperty: "GetElementProperty",
            GetElementCSSValue: "GetElementCSSValue",
            GetElementText: "GetElementText",
            GetElementTagName: "GetElementTagName",
            GetElementRect: "GetElementRect",
            IsElementEnabled: "IsElementEnabled",
            GetComputedRole: "GetComputedRole",
            GetComputedLabel: "GetComputedLabel",
            ElementClick: "ElementClick",
            ElementClear: "ElementClear",
            ElementSendKeys: "ElementSendKeys",
            GetPageSource: "GetPageSource",
            ExecuteScript: "ExecuteScript",
            ExecuteAsyncScript: "ExecuteAsyncScript",
            GetAllCookies: "GetAllCookies",
            GetNamedCookie: "GetNamedCookie",
            AddCookie: "AddCookie",
            DeleteCookie: "DeleteCookie",
            DeleteAllCookies: "DeleteAllCookies",
            PerformActions: "PerformActions",
            ReleaseActions: "ReleaseActions",
            DismissAlert: "DismissAlert",
            AcceptAlert: "AcceptAlert",
            GetAlertText: "GetAlertText",
            SendAlertText: "SendAlertText",
            TakeScreenshot: "TakeScreenshot",
            TakeElementScreenshot: "TakeElementScreenshot",
            PrintPage: "PrintPage"
        }

        InfoList = {
            NewSession: new CommandInfo(method="POST", resourcePath="/session"),
            DeleteSession: new CommandInfo(method="DELETE", resourcePath="/session/{session id}"),
            Status: new CommandInfo(method="GET", resourcePath="/status"),
            GetTimeouts: new CommandInfo(method="GET", resourcePath="/session/{session id}/timeouts"),
            SetTimeouts: new CommandInfo(method="POST", resourcePath="/session/{session id}/timeouts"),
            NavigateTo: new CommandInfo(method="POST", resourcePath="/session/{session id}/url"),
            GetCurrentURL: new CommandInfo(method="GET", resourcePath="/session/{session id}/url"),
            Back: new CommandInfo(method="POST", resourcePath="/session/{session id}/back"),
            Forward: new CommandInfo(method="POST", resourcePath="/session/{session id}/forward"),
            Refresh: new CommandInfo(method="POST", resourcePath="/session/{session id}/refresh"),
            GetTitle: new CommandInfo(method="GET", resourcePath="/session/{session id}/title"),
            GetWindowHandle: new CommandInfo(method="GET", resourcePath="/session/{session id}/window"),
            CloseWindow: new CommandInfo(method="DELETE", resourcePath="/session/{session id}/window"),
            SwitchToWindow: new CommandInfo(method="POST", resourcePath="/session/{session id}/window"),
            GetWindowHandles: new CommandInfo(method="GET", resourcePath="/session/{session id}/window/handles"),
            NewWindow: new CommandInfo(method="POST", resourcePath="/session/{session id}/window/new"),
            SwitchToFrame: new CommandInfo(method="POST", resourcePath="/session/{session id}/frame"),
            SwitchToParentFrame: new CommandInfo(method="POST", resourcePath="/session/{session id}/frame/parent"),
            GetWindowRect: new CommandInfo(method="GET", resourcePath="/session/{session id}/window/rect"),
            SetWindowRect: new CommandInfo(method="POST", resourcePath="/session/{session id}/window/rect"),
            MaximizeWindow: new CommandInfo(method="POST", resourcePath="/session/{session id}/window/maximize"),
            MinimizeWindow: new CommandInfo(method="POST", resourcePath="/session/{session id}/window/minimize"),
            FullscreenWindow: new CommandInfo(method="POST", resourcePath="/session/{session id}/window/fullscreen"),
            GetActiveElement: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/active"),
            GetElementShadowRoot: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/shadow"),
            FindElement: new CommandInfo(method="POST", resourcePath="/session/{session id}/element"),
            FindElements: new CommandInfo(method="POST", resourcePath="/session/{session id}/elements"),
            FindElementFromElement: new CommandInfo(method="POST", resourcePath="/session/{session id}/element/{element id}/element"),
            FindElementsFromElement: new CommandInfo(method="POST", resourcePath="/session/{session id}/element/{element id}/elements"),
            FindElementFromShadowRoot: new CommandInfo(method="POST", resourcePath="/session/{session id}/shadow/{shadow id}/element"),
            FindElementsFromShadowRoot: new CommandInfo(method="POST", resourcePath="/session/{session id}/shadow/{shadow id}/elements"),
            IsElementSelected: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/selected"),
            GetElementAttribute: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/attribute/{name}"),
            GetElementProperty: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/property/{name}"),
            GetElementCSSValue: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/css/{property name}"),
            GetElementText: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/text"),
            GetElementTagName: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/name"),
            GetElementRect: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/rect"),
            IsElementEnabled: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/enabled"),
            GetComputedRole: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/computedrole"),
            GetComputedLabel: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/computedlabel"),
            ElementClick: new CommandInfo(method="POST", resourcePath="/session/{session id}/element/{element id}/click"),
            ElementClear: new CommandInfo(method="POST", resourcePath="/session/{session id}/element/{element id}/clear"),
            ElementSendKeys: new CommandInfo(method="POST", resourcePath="/session/{session id}/element/{element id}/value"),
            GetPageSource: new CommandInfo(method="GET", resourcePath="/session/{session id}/source"),
            ExecuteScript: new CommandInfo(method="POST", resourcePath="/session/{session id}/execute/sync"),
            ExecuteAsyncScript: new CommandInfo(method="POST", resourcePath="/session/{session id}/execute/async"),
            GetAllCookies: new CommandInfo(method="GET", resourcePath="/session/{session id}/cookie"),
            GetNamedCookie: new CommandInfo(method="GET", resourcePath="/session/{session id}/cookie/{name}"),
            AddCookie: new CommandInfo(method="POST", resourcePath="/session/{session id}/cookie"),
            DeleteCookie: new CommandInfo(method="DELETE", resourcePath="/session/{session id}/cookie/{name}"),
            DeleteAllCookies: new CommandInfo(method="DELETE", resourcePath="/session/{session id}/cookie"),
            PerformActions: new CommandInfo(method="POST", resourcePath="/session/{session id}/actions"),
            ReleaseActions: new CommandInfo(method="DELETE", resourcePath="/session/{session id}/actions"),
            DismissAlert: new CommandInfo(method="POST", resourcePath="/session/{session id}/alert/dismiss"),
            AcceptAlert: new CommandInfo(method="POST", resourcePath="/session/{session id}/alert/accept"),
            GetAlertText: new CommandInfo(method="GET", resourcePath="/session/{session id}/alert/text"),
            SendAlertText: new CommandInfo(method="POST", resourcePath="/session/{session id}/alert/text"),
            TakeScreenshot: new CommandInfo(method="GET", resourcePath="/session/{session id}/screenshot"),
            TakeElementScreenshot: new CommandInfo(method="GET", resourcePath="/session/{session id}/element/{element id}/screenshot"),
            PrintPage: new CommandInfo(method="POST", resourcePath="/session/{session id}/print")
        };
    }
</cfscript>
</cfcomponent>